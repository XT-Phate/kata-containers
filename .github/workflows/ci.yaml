name: Run the Kata Containers CI
on:
  workflow_call:
    inputs:
      commit-hash:
        required: true
        type: string
      pr-number:
        required: true
        type: string
      tag:
        required: true
        type: string
      target-branch:
        required: false
        type: string
        default: ""
      skip-test:
        required: false
        type: string
        default: no
    secrets:
      AUTHENTICATED_IMAGE_PASSWORD:
        required: true

      AZ_APPID:
        required: true
      AZ_TENANT_ID:
       required: true
      AZ_SUBSCRIPTION_ID:
        required: true
      CI_HKD_PATH:
        required: true
      ITA_KEY:
        required: true
      QUAY_DEPLOYER_PASSWORD:
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  build-kata-static-tarball-amd64:
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    uses: ./.github/workflows/build-kata-static-tarball-amd64.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}

  publish-kata-deploy-payload-amd64:
    needs: build-kata-static-tarball-amd64
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/publish-kata-deploy-payload.yaml
    with:
      tarball-suffix: -${{ inputs.tag }}
      registry: ghcr.io
      repo: ${{ github.repository_owner }}/kata-deploy-ci
      tag: ${{ inputs.tag }}-amd64
      commit-hash: ${{ inputs.commit-hash }}
      target-branch: ${{ inputs.target-branch }}
      runner: ubuntu-22.04
      arch: amd64
    secrets:
      QUAY_DEPLOYER_PASSWORD: ${{ secrets.QUAY_DEPLOYER_PASSWORD }}

  build-and-publish-tee-confidential-unencrypted-image:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0
          persist-credentials: false

      - name: Rebase atop of the latest target branch
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to Kata Containers ghcr.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
        with:
          tags: ghcr.io/kata-containers/test-images:unencrypted-${{ inputs.pr-number }}
          push: true
          context: tests/integration/kubernetes/runtimeclass_workloads/confidential/unencrypted/
          platforms: linux/amd64, linux/s390x
          file: tests/integration/kubernetes/runtimeclass_workloads/confidential/unencrypted/Dockerfile

  publish-csi-driver-amd64:
    needs: build-kata-static-tarball-amd64
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ inputs.commit-hash }}
          fetch-depth: 0
          persist-credentials: false

      - name: Rebase atop of the latest target branch
        run: |
          ./tests/git-helper.sh "rebase-atop-of-the-latest-target-branch"
        env:
          TARGET_BRANCH: ${{ inputs.target-branch }}

      - name: get-kata-tarball
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: kata-static-tarball-amd64-${{ inputs.tag }}
          path: kata-artifacts

      - name: Install tools
        run: bash tests/integration/kubernetes/gha-run.sh install-kata-tools kata-artifacts

      - name: Copy binary into Docker context
        run: |
          # Copy to the location where the Dockerfile expects the binary.
          mkdir -p src/tools/csi-kata-directvolume/bin/
          cp /opt/kata/bin/csi-kata-directvolume src/tools/csi-kata-directvolume/bin/directvolplugin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to Kata Containers ghcr.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5.4.0
        with:
          tags: ghcr.io/kata-containers/csi-kata-directvolume:${{ inputs.pr-number }}
          push: true
          context: src/tools/csi-kata-directvolume/
          platforms: linux/amd64
          file: src/tools/csi-kata-directvolume/Dockerfile

  run-kata-coco-tests-workflow:
    if: ${{ (inputs.skip-test != 'yes') && (github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'test-coco')) }}
    runs-on: ubuntu-22.04
    needs:
    - publish-kata-deploy-payload-amd64
    - build-and-publish-tee-confidential-unencrypted-image
    - publish-csi-driver-amd64
    env:
      GH_TOKEN: ${{ github.token }}
    permissions:
      actions: write
      contents: read
    steps:
      - name: Checkout the code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Trigger kata-coco-tests for amd64 arch if applicable
        run: |
          gh workflow run run-kata-coco-tests.yaml \
            --ref ${{ github.ref_name }} \
            -f artifact-run-id=${{ github.run_id }} \
            -f tarball-suffix="-${{ inputs.tag }}" \
            -f registry=ghcr.io \
            -f repo=${{ github.repository_owner }}/kata-deploy-ci \
            -f tag=${{ inputs.tag }}-amd64 \
            -f commit-hash=${{ inputs.commit-hash }} \
            -f pr-number=${{ inputs.pr-number }} \
            -f target-branch=${{ inputs.target-branch }}
